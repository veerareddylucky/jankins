version: '3.7'
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ES_VERSION:-7.4.0}
    container_name: spring-petclinic-elasticsearch
    environment:
    - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
    - node.name=petclinic-elasticsearch
    - discovery.type=single-node
    - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
    - cluster.name=sa-demo-spring-petclinic
    - bootstrap.memory_lock=true
    - xpack.monitoring.enabled=true
    - xpack.ml.node_concurrent_job_allocations=8
    - xpack.security.enabled=true
    - http.host=0.0.0.0
    networks:
      spring-petclinic-net:
        aliases:
        - es
        - elasticsearch
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 4g
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
    ports:
    - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
    cap_add:
    - IPC_LOCK

  kibana:
    image: docker.elastic.co/kibana/kibana:${ES_VERSION:-7.4.0}
    container_name: spring-petclinic-kibana
    environment:
      SERVER_HOST: "0.0.0.0"
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      XPACK_SECURITY_SECURECOOKIES: "false"
      XPACK_MONITORING_KIBANA_COLLECTION_ENABLED: "false"
      XPACK_MONITORING_ENABLED: "true"
    networks:
      spring-petclinic-net:
        aliases:
        - kibana
    ports:
    - "127.0.0.1:${KIBANA_PORT:-5601}:5601"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    depends_on:
      - elasticsearch

  apm-server:
    image: docker.elastic.co/apm/apm-server:${ES_VERSION:-7.4.0}
    container_name: spring-petclinic-apm-server
    ports:
      - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
      - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    networks:
      spring-petclinic-net:
        aliases:
          - apm-server
    command: >
      apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E apm-server.kibana.protocol=http
        -E apm-server.kibana.username=elastic
        -E apm-server.kibana.password=${ELASTIC_PASSWORD:-changeme}
        -E monitoring.enabled=true
        -E output.elasticsearch.hosts=elasticsearch:9200
        -E output.elasticsearch.username=elastic
        -E output.elasticsearch.password=${ELASTIC_PASSWORD:-changeme}
        -E setup.template.enabled=true
        -E setup.template.overwrite=true
        -E apm-server.frontend.enable=true
        -E apm-server.frontend.rate_limit=10000
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E logging.metrics.enabled=true
        -E logging.metrics.enabled=true
        -E ilm.enabled=true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s

  mysql:
    image: spring-petclinic-mysql:${ES_VERSION:-7.4.0}
    build:
      context: ./docker/mysql
    container_name: spring-petclinic-mysql
    networks:
      spring-petclinic-net:
        aliases:
          - mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=us-east-2

  spring-petclinic-server:
    image: spring-petclinic-server:${ES_VERSION:-7.4.0}
    build:
      context: ./docker/server
    container_name: spring-petclinic-server
    networks:
      spring-petclinic-net:
        aliases:
          - spring-petclinic-server
    ports:
      - "127.0.0.1:${SERVER_PORT:-8000}:8000"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ELASTIC_APM_SERVER_URL: http://apm-server:${APM_SERVER_PORT:-8200}
      ELASTIC_APM_SPAN_FRAMES_MIN_DURATION: -1
      ELASTIC_APM_CAPTURE_BODY: all
      SERVER_PORT: ${SERVER_PORT:-8000}
      JAVA_PROFILE: mysql,spring-data-jpa
      DATABASE_URL: jdbc:mysql://mysql:3306/petclinic?useUnicode=true
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: petclinic
      DATABASE_DRIVER: com.mysql.jdbc.Driver
      DATABASE_DIALECT: MYSQL
      DATABASE_PLATFORM: org.hibernate.dialect.MySQLDialect
      DATASOURCE_SCHEMA: classpath*:db/mysql/initDB.sql
      DATASOURCE_DATA: classpath*:db/mysql/populateDB.sql
      INITIALIZE_DB: "true"
      ELASTIC_APM_SERVICE_NAME: petclinic-spring
    depends_on:
      - elasticsearch
      - apm-server
      - mysql
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://spring-petclinic-server:${SERVER_PORT:-8000}/"]
      interval: 10s
      retries: 10

  spring-petclinic-client:
    build:
      context: ./docker/client
    image: spring-petclinic-client:${ES_VERSION:-7.4.0}
    container_name: spring-petclinic-client
    networks:
      spring-petclinic-net:
        aliases:
          - spring-petclinic-client
    ports:
      - "127.0.0.1:${CLIENT_SERVER_PORT:-3000}:3000"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ELASTIC_APM_SERVER_URL: http://apm-server:${APM_SERVER_PORT:-8200}
      ELASTIC_APM_SERVER_JS_URL: http://localhost:8200
      ELASTIC_APM_SERVICE_VERSION: 1.0.0
      ELASTIC_APM_SERVICE_NAME: petclinic-client
      ELASTIC_APM_CLIENT_SERVICE_NAME: petclinic-react
      API_SERVER: 'http://spring-petclinic-server:${SERVER_PORT:-8000}'
      SERVER_PORT: ${CLIENT_SERVER_PORT:-3000}
      NODE_ENV: production
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
      PETCLINIC_INTERNAL_URL: "http://spring-petclinic-client:${CLIENT_SERVER_PORT:-3000}"
      PETCLINIC_EXTERNAL_URL: "http://localhost:${CLIENT_SERVER_PORT:-3000}"
      ADDRESS_SERVER: "http://spring-address-finder:5000"
    depends_on:
      - spring-petclinic-server
      - spring-address-finder
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://spring-petclinic-client:${CLIENT_SERVER_PORT:-3000}/"]
      interval: 10s
      retries: 10

  spring-address-finder:
    build:
      context: ./docker/address-finder
    image: spring-address-finder:${ES_VERSION:-7.4.0}
    container_name: spring-address-finder
    networks:
      spring-petclinic-net:
        aliases:
          - spring-address-finder
    ports:
      - "127.0.0.1:${ADDRESS_FINDER_PORT:-5000}:5000"
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ELASTIC_APM_SERVER_URL: http://apm-server:${APM_SERVER_PORT:-8200}
      ELASTIC_APM_SERVICE_VERSION: 1.0.0
      ELASTIC_APM_SERVICE_NAME: petclinic-address-finder
      ELASTIC_APM_CLIENT_SERVICE_NAME: petclinic-react
      ELASTICSEARCH_USER: elastic
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD:-changeme}
    depends_on:
      - elasticsearch

  spring-client-loadgen:
    build:
      context: ./docker/client-loadgen
    image: spring-client-loadgen:${ES_VERSION:-7.4.0}
    container_name: spring-client-loadgen
    networks:
      spring-petclinic-net:
        aliases:
          - spring-client-loadgen
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      PETCLINIC_BASE_URL: http://spring-petclinic-client:${CLIENT_SERVER_PORT:-3000}
    depends_on:
      - spring-petclinic-client

  spring-server-loadgen:
    build:
      context: ./docker/server-loadgen
    image: spring-server-loadgen:${ES_VERSION:-7.4.0}
    container_name: spring-server-loadgen
    networks:
      spring-petclinic-net:
        aliases:
          - spring-server-loadgen
    logging:
      driver: 'json-file'
      options:
        max-size: '2m'
        max-file: '5'
    environment:
      ENDPOINT_PORT: 3000
      ENDPOINT_BASE: spring-petclinic-client
      ENDPOINT_PROTOCOL: http
      DATA_FILES: "/opt/data_files"
    depends_on:
      - spring-petclinic-client

networks:
  spring-petclinic-net:
    driver: bridge
volumes:
  esdata01:
    driver: local
